# This is a basic workflow to help you get started with Actions

name: Build Yocto
description: Builds Yocto image from source code
inputs:
  image:
    description: 'Yocto Image'
    required: true
  machine:
    description: 'Yocto Machine'
    required: true
  build_dir:
    description: 'Yocto Build Directory'
    required: true
  distro:
    description: 'Yocto Distro'
    required: true
  setup_script:
    description: 'Yocto Setup Script'
    required: true
  repo_git:
    description: 'Repo Git Repository'
    required: true
  repo_sha:
    description: 'Repo SHA, Branch, or Tag'
    required: true
  sstate_cache:
    description: 'Directory to sstate_cache'
    required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
runs:

  # This workflow contains a single job called "build"
  using: "composite"

  # Steps represent a sequence of tasks that will be executed as part of the job
  steps:

    - name: repo init
      run: |
        mkdir -p ${{ inputs.machine }}-${{ inputs.repo_sha }}-${GITHUB_RUN_ID}
        cd ${{ inputs.machine }}-${{ inputs.repo_sha }}-${GITHUB_RUN_ID}
        repo init -u ${{ inputs.repo_git }} -b ${{ inputs.repo_sha }}
      shell: bash

    - name: repo sync
      run: |
        cd ${{ inputs.machine }}-${{ inputs.repo_sha }}-${GITHUB_RUN_ID}
        repo sync -j4
      shell: bash

    - name: create build directory
      run: |
        cd ${{ inputs.machine }}-${{ inputs.repo_sha }}-${GITHUB_RUN_ID}
        EULA=1 MACHINE=${{ inputs.machine }} DISTRO=${{ inputs.distro }} source ./${{ inputs.setup_script }} ${{ inputs.build_dir }}
        if [ -e /opt/yocto_downloads/ ]; then sed -i 's/DL_DIR ?= "${BSPDIR}\/downloads/DL_DIR = "\/opt\/yocto_downloads/g' conf/local.conf; fi
        if [ -n "${{ inputs.sstate_cache }}" ]; then mkdir -p ${{ inputs.sstate_cache }} && echo "SSTATE_DIR = \"${{ inputs.sstate_cache }}\"" >> conf/local.conf; fi
      shell: bash

    - name: build ${{ inputs.image }}
      run: |
        cd ${{ inputs.machine }}-${{ inputs.repo_sha }}-${GITHUB_RUN_ID}
        MACHINE=${{ inputs.machine }} DISTRO=${{ inputs.distro }} source ./${{ inputs.setup_script }} ${{ inputs.build_dir }}
        bitbake ${{ inputs.image }} 
      shell: bash

    # - name: cleanup
    #   run: rm -rf ${{ inputs.machine }}-${{ inputs.repo_sha }}-${GITHUB_RUN_ID}
    #   shell: bash

